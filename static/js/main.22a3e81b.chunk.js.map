{"version":3,"sources":["types/FilterOptions.ts","api.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOptions","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoList","todos","currentTodo","onTodoClick","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","memo","query","onQueryChange","selectedTodos","onSelectedTodosChange","value","onChange","event","target","all","active","placeholder","style","pointerEvents","length","TodoModal","onClose","useState","userDetails","setUserDetails","useEffect","userId","href","email","name","App","todosFromServer","setTodosFromServer","setCurrentTodo","setQuery","filterOption","setFilterOption","visibleTodos","useMemo","filter","matchedWithSearch","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22a3e81b.chunk.js","sourcesContent":["export const enum FilterOptions {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  currentTodo: Todo | null,\n  onTodoClick: React.Dispatch<React.SetStateAction<Todo | null>>,\n}\n\nexport const TodoList: FC<Props> = ({ todos, currentTodo, onTodoClick }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span\n                className=\"icon\"\n                data-cy=\"iconCompleted\"\n              >\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => (\n                currentTodo?.id === todo.id\n                  ? onTodoClick(null)\n                  : onTodoClick(todo)\n              )}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye-slash': todo.id === currentTodo?.id,\n                  'fa-eye': todo.id !== currentTodo?.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC, memo } from 'react';\nimport { FilterOptions } from '../../types/FilterOptions';\n\ninterface Props {\n  query: string,\n  onQueryChange: React.Dispatch<React.SetStateAction<string>>,\n  selectedTodos: string,\n  onSelectedTodosChange: React.Dispatch<React.SetStateAction<string>>,\n}\n\nexport const TodoFilter: FC<Props> = memo(({\n  query,\n  onQueryChange,\n  selectedTodos,\n  onSelectedTodosChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedTodos}\n          onChange={(event) => (\n            onSelectedTodosChange(event.target.value))}\n        >\n          <option value={FilterOptions.all}>All</option>\n          <option value={FilterOptions.active}>Active</option>\n          <option value={FilterOptions.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event => {\n          onQueryChange(event.target.value);\n        })}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      { /* eslint-disable jsx-a11y/control-has-associated-label */}\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length > 0 && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n));\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo,\n  onClose: React.Dispatch<React.SetStateAction<Todo | null>>,\n}\n\nexport const TodoModal: FC<Props> = ({ todo, onClose }) => {\n  const [userDetails, setUserDetails] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUserDetails);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userDetails\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => onClose(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-danger\">\n                  {todo.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={userDetails.email}>\n                  {userDetails.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport {\n  useState,\n  useEffect,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { FilterOptions } from './types/FilterOptions';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [filterOption, setFilterOption] = useState<string>(FilterOptions.all);\n\n  useEffect(() => {\n    getTodos().then(setTodosFromServer);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todosFromServer.filter(todo => {\n      const matchedWithSearch = todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase());\n\n      switch (filterOption) {\n        case FilterOptions.active:\n          return !todo.completed && matchedWithSearch;\n        case FilterOptions.completed:\n          return todo.completed && matchedWithSearch;\n        case FilterOptions.all:\n        default:\n          return matchedWithSearch;\n      }\n    });\n  }, [filterOption, query, todosFromServer]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                selectedTodos={filterOption}\n                onSelectedTodosChange={setFilterOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosFromServer.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    currentTodo={currentTodo}\n                    onTodoClick={setCurrentTodo}\n                  />\n                )\n                : <Loader />}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && <TodoModal todo={currentTodo} onClose={setCurrentTodo} />}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}